"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6711],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),h=o,f=p["".concat(c,".").concat(h)]||p[h]||d[h]||r;return t?a.createElement(f,i(i({ref:n},u),{},{components:t})):a.createElement(f,i({ref:n},u))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=p;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),o=t(6010);const r="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(7462),o=t(7294),r=t(6010),i=t(2466),s=t(6550),c=t(1980),l=t(7392),u=t(12);function d(e){return function(e){var n;return(null==(n=o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:n.filter(Boolean))??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}function p(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=p(e),[i,s]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[c,l]=f({queryString:t,groupId:a}),[d,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,u.Nk)(t);return[a,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),g=(()=>{const e=c??d;return h({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{g&&s(g)}),[g]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),l(e),m(e)}),[l,m,r]),tabValues:r}}var g=t(2389);const k="tabList__CuJ",b="tabItem_LNqP";function y(e){let{className:n,block:t,selectedValue:s,selectValue:c,tabValues:l}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const n=e.currentTarget,t=u.indexOf(n),a=l[t].value;a!==s&&(d(n),c(a))},h=e=>{var n;let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}null==(n=t)||n.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n)},l.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,key:n,ref:e=>u.push(e),onKeyDown:h,onClick:p},i,{className:(0,r.Z)("tabs__item",b,null==i?void 0:i.className,{"tabs__item--active":s===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function N(e){const n=m(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",k)},o.createElement(y,(0,a.Z)({},e,n)),o.createElement(v,(0,a.Z)({},e,n)))}function w(e){const n=(0,g.Z)();return o.createElement(N,(0,a.Z)({key:String(n)},e))}},9928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var a=t(7462),o=(t(7294),t(3905)),r=t(4866),i=t(5162);const s={},c="Connections API",l={unversionedId:"nango-auth/connections-api",id:"nango-auth/connections-api",title:"Connections API",description:"The connections API is the recommended way to retrieve access tokens and Connection objects in programming languages where Nango does not yet offer a backend SDK.",source:"@site/docs/nango-auth/connections-api.md",sourceDirName:"nango-auth",slug:"/nango-auth/connections-api",permalink:"/nango-auth/connections-api",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/master/docs/docs/nango-auth/connections-api.md",tags:[],version:"current",frontMatter:{},sidebar:"nango",previous:{title:"Node SDK",permalink:"/nango-auth/node-sdk"},next:{title:"Advanced Configurations",permalink:"/nango-auth/configuration"}},u={},d=[{value:"Base URL and authentication",id:"base-url-and-authentication",level:2},{value:"Retrieving access tokens and connection data",id:"connectionDetails",level:2},{value:"Getting a list of all Connections",id:"getting-a-list-of-all-connections",level:2},{value:"Getting connections for a specific connection id",id:"getting-connections-for-a-specific-connection-id",level:2}],p={toc:d};function h(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connections-api"},"Connections API"),(0,o.kt)("p",null,"The connections API is the recommended way to retrieve access tokens and Connection objects in programming languages where Nango does not yet offer a backend SDK."),(0,o.kt)("h2",{id:"base-url-and-authentication"},"Base URL and authentication"),(0,o.kt)("p",null,"Where you access the Connections API and how you authenticate depends on your Nango deployment."),(0,o.kt)(r.Z,{groupId:"deployment",queryString:!0,mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"cloud",label:"Nango Cloud",mdxType:"TabItem"},(0,o.kt)("p",null,"You will need the ",(0,o.kt)("inlineCode",{parentName:"p"},"Secret Key")," from your ",(0,o.kt)("a",{parentName:"p",href:"https://app.nango.dev/"},"Dashboard"),"."),(0,o.kt)("p",null,"API base URL: ",(0,o.kt)("inlineCode",{parentName:"p"},"https://api.nango.dev")),(0,o.kt)("p",null,"Authorization header: ",(0,o.kt)("inlineCode",{parentName:"p"},"Bearer <SECRET-KEY>"))),(0,o.kt)(i.Z,{value:"localhost",label:"Localhost",mdxType:"TabItem"},(0,o.kt)("p",null,"API base URL: ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:3003")),(0,o.kt)("p",null,"No Authorization header is required.")),(0,o.kt)(i.Z,{value:"self-hosted",label:"Self-hosted",mdxType:"TabItem"},(0,o.kt)("p",null,"API base URL: ",(0,o.kt)("inlineCode",{parentName:"p"},"https://<NANGO-HOST-AND-PORT>")),(0,o.kt)("p",null,"Authorization header: Only required if you ",(0,o.kt)("a",{parentName:"p",href:"/nango-deploy/oss-instructions#securing-your-instance"},"secured your instance"),". If so, Basic Auth as described in the docs there."))),(0,o.kt)("h2",{id:"connectionDetails"},"Retrieving access tokens and connection data"),(0,o.kt)("p",null,"Request type: ",(0,o.kt)("inlineCode",{parentName:"p"},"GET"),(0,o.kt)("br",{parentName:"p"}),"\n","Endpoint: ",(0,o.kt)("inlineCode",{parentName:"p"},"/connection/<CONNECTION-ID>?provider_config_key=<PROVIDER-CONFIG-KEY>")),(0,o.kt)("p",null,"If you are not familiar with the Provider Config Key and Connection Id parameters please take a look at the ",(0,o.kt)("a",{parentName:"p",href:"/nango-auth/core-concepts"},"Core Concepts")," page."),(0,o.kt)("p",null,"This is the recommended way to retrieve an access token to make an API call: Retrieve the current access token from ",(0,o.kt)("inlineCode",{parentName:"p"},"credentials.access_token")," in the response."),(0,o.kt)("p",null,"This retrieves the full Connection object from Nango, which looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\nid: 18393,                                  // Nango internal connection id\ncreated_at: '2023-03-08T09:43:03.725Z',     // Creation timestamp\nupdated_at: '2023-03-08T09:43:03.725Z',     // Last updated timestamp (e.g. last token refresh)\nprovider_config_key: 'github',              // <PROVIDER-CONFIG-KEY>\nconnection_id: '1',                         // <CONNECTION-ID>\ncredentials: {\n    type: 'OAUTH2',                         // OAUTH2 or OAUTH1\n    access_token: 'gho_tsXLG73f....',       // The current access token (refreshed if needed)\n    refresh_token: 'gho_fjofu84u9....',     // Refresh token (if available, otherwise missing)\n    expires_at: '2024-03-08T09:43:03.725Z', // Expiration date of access token (only if refresh token is present, otherwise missing)\n    raw: {                                  // Raw token response from the OAuth provider: Contents vary!\n        access_token: 'gho_tsXLG73f....',\n        token_type: 'bearer',\n        scope: 'public_repo,user'\n    }\n},\nconnection_config: {},                      // Additional configuration, see Frontend SDK reference\naccount_id: 0,                              // ID of your Nango account (Nango Cloud only)\nmetadata: {}                                // Structured metadata retrieved by Nango\n}\n")),(0,o.kt)("p",null,"The metadata field contains ",(0,o.kt)("a",{parentName:"p",href:"/nango-auth/core-concepts#metadata"},"structured metadata"),", which Nango obtained from the OAuth flow. This varies by provider and is documented on the provider's Nango documentation page."),(0,o.kt)("admonition",{title:"Keep your access tokens fresh and don't cache them!",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"When you call this method the Nango server will check whether the access token needs to be refreshed, and, if needed, refresh it before returning it to you. This typically changes the access token."),(0,o.kt)("p",{parentName:"admonition"},"Because of this it is important that you always use this method to get the latest access token from Nango just before making an API request. If you cache the access token on your end you risk working with an expired or revoked access token and your API call will fail!"),(0,o.kt)("p",{parentName:"admonition"},"We take great care to make sure that this call to get an access token is blazingly fast, so retrieving it fresh will not slow down your API requests.")),(0,o.kt)("h2",{id:"getting-a-list-of-all-connections"},"Getting a list of all Connections"),(0,o.kt)("p",null,"Request type: ",(0,o.kt)("inlineCode",{parentName:"p"},"GET"),(0,o.kt)("br",{parentName:"p"}),"\n","Endpoint: ",(0,o.kt)("inlineCode",{parentName:"p"},"/connection")),(0,o.kt)("p",null,"Returns a list of minimalistic Connection objects. This can be helpful if you need to check whether a user has setup a specific integration. Note that the list does not contain any access credentials and fetching it also does not refresh the access tokens of any Connections."),(0,o.kt)("p",null,"The return value looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n    connections: [\n        {\n            connection_id: '<CONNECTION-ID-1>',\n            provider: '<PROVIDER-CONFIG-KEY-1>',\n            created: '2023-03-08T09:43:03.725Z'\n        },\n        {\n            //....\n        }\n        // Additional objects like the one above\n    ];\n}\n")),(0,o.kt)("h2",{id:"getting-connections-for-a-specific-connection-id"},"Getting connections for a specific connection id"),(0,o.kt)("p",null,"Request type: ",(0,o.kt)("inlineCode",{parentName:"p"},"GET"),(0,o.kt)("br",{parentName:"p"}),"\n","Endpoint: ",(0,o.kt)("inlineCode",{parentName:"p"},"/connection?connectionId=<connectonId>")),(0,o.kt)("p",null,"Returns a list of minimalistic Connection objects for only a single connectionId. This can be useful if you want to get all the connections that have been created for only a specific connection id. Note that the list does not contain any access credentials and fetching it also does not refresh the access tokens of any Connections."),(0,o.kt)("p",null,"The return value looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n    connections: [\n        {\n            connection_id: 'connectonId',\n            provider: '<PROVIDER-CONFIG-KEY-1>',\n            created: '2023-03-08T09:43:03.725Z'\n        },\n        {\n            //....\n        }\n        // Additional objects like the one above\n    ];\n}\n")))}h.isMDXComponent=!0}}]);