"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4083],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,f=d["".concat(c,".").concat(h)]||d[h]||p[h]||a;return n?o.createElement(f,i(i({ref:t},u),{},{components:n})):o.createElement(f,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3869:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={},i="Core Concepts",s={unversionedId:"reference/core-concepts",id:"reference/core-concepts",title:"Core Concepts",description:"A brief definition of the main items in Nango and how they related to each other.",source:"@site/docs/reference/core-concepts.md",sourceDirName:"reference",slug:"/reference/core-concepts",permalink:"/reference/core-concepts",draft:!1,editUrl:"https://github.com/nangohq/nango/tree/master/docs/docs/reference/core-concepts.md",tags:[],version:"current",frontMatter:{},sidebar:"nango",previous:{title:"Quickstart \ud83d\ude80",permalink:"/quickstart"},next:{title:"Frontend SDK",permalink:"/reference/frontend-sdk"}},c={},l=[{value:"OAuth Provider (aka API)",id:"providers",level:2},{value:"Integrations &amp; Config Keys",id:"integrations",level:2},{value:"Integration Config Key",id:"configKey",level:3},{value:"Connections and the Connection Id: How we store access tokens",id:"connections",level:2},{value:"Picking a good Connection Id",id:"connectionId",level:3},{value:"Connection Metadata (and raw token responses)",id:"metadata",level:3}],u={toc:l};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"core-concepts"},"Core Concepts"),(0,r.kt)("p",null,"A brief definition of the main items in Nango and how they related to each other."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:n(6017).Z},(0,r.kt)("img",{alt:"Nango Core concepts",src:n(8302).Z,width:"1245",height:"699"}))),(0,r.kt)("h2",{id:"providers"},"OAuth Provider (aka API)"),(0,r.kt)("p",null,"Nango calls the APIs, e.g. GitHub, Google, Slack, Notion etc, OAuth Providers. You can find a ",(0,r.kt)("a",{parentName:"p",href:"/providers"},"full list of the supported Providers here"),"."),(0,r.kt)("p",null,"For each OAuth Provider Nango has one or more Provider Templates, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"brex")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"brex-staging"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"google"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"slack")," etc. These tell Nango how to run the OAuth flow for this provider."),(0,r.kt)("p",null,"Note that some OAuth Providers cover OAuth for multiple APIs: For instance, Google and Microsoft have one central OAuth service that gives you access tokens. These can be used for dozens of different APIs from these companies."),(0,r.kt)("h2",{id:"integrations"},"Integrations & Config Keys"),(0,r.kt)("p",null,"To run OAuth flows for you Nango needs a few details from your app:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The provider template to use, e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"github"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"notion")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"google")),(0,r.kt)("li",{parentName:"ul"},"Your app's ",(0,r.kt)("inlineCode",{parentName:"li"},"client_id")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"client_secret")," (this is how the OAuth provider identifies your application)"),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"scope"),"s you would like to use with the API")),(0,r.kt)("p",null,"Nango calls this bundle an Integration. You add and manage them in ",(0,r.kt)("a",{parentName:"p",href:"https://app.nango.dev/integrations"},"your dashboard"),"."),(0,r.kt)("h3",{id:"configKey"},"Integration Config Key"),(0,r.kt)("p",null,"Each Integration in Nango is identified by a unique Config Key. You get to choose it."),(0,r.kt)("p",null,"You use this Config Key to tell Nango for which configuration the OAuth flow should run, or for which provider the access token should be retrieved (more on this below)."),(0,r.kt)("p",null,"For most use cases we recommend you use the Provider Template name as the Config Key, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"google"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"slack"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"salesforce")," etc."),(0,r.kt)("p",null,"But in some situations you may have multiple integrations for the same provider: For instance one Google integration for accessing Google Calendar and one for accessing Google Drive. In this case you will need to pick unique names for each, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"google-calendar")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"google-drive"),"."),(0,r.kt)("h2",{id:"connections"},"Connections and the Connection Id: How we store access tokens"),(0,r.kt)("p",null,"When you run an OAuth flow with Nango we securely store the returned OAuth credentials for you in Nango."),(0,r.kt)("p",null,"We call this a Connection, because it represents a link between a user of your app and the OAuth provider."),(0,r.kt)("p",null,"To identify this Connection, we ask you for a ",(0,r.kt)("strong",{parentName:"p"},"Connection Id"),": A unique identifier for this set of credentials.",(0,r.kt)("br",{parentName:"p"}),"\n","You tell us this Connection Id when you start the OAuth flow, and you later use the same Connection Id to retrieve the current access token, metadata or other information about this set of OAuth credentials from Nango."),(0,r.kt)("h3",{id:"connectionId"},"Picking a good Connection Id"),(0,r.kt)("p",null,"The pair of ",(0,r.kt)("inlineCode",{parentName:"p"},"<Config Key, Connection Id>")," needs to be unique in your Nango instance. This means you can use the same Connection Id across different Integrations (e.g. use Connection Id ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," with a ",(0,r.kt)("inlineCode",{parentName:"p"},"google")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"github")," config)."),(0,r.kt)("p",null,"We recommend you use the User ID, Account ID or similar unique identifier for the Connection Id."),(0,r.kt)("p",null,"The only exception is if you expect a user to setup multiple connections with the same Integration: For instance, if your app lets a user connect multiple Google Calendar accounts or multiple Slack workspaces. In this case you will need to pick a different value for the Connection Id, so it is unique again."),(0,r.kt)("h3",{id:"metadata"},"Connection Metadata (and raw token responses)"),(0,r.kt)("p",null,"Besides the access token and refresh tokens Nango also stores a few other things for you:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Metadata, which the OAuth provider returns during the OAuth flow (e.g. a company ID, tenant ID, instance URL or similar)"),(0,r.kt)("li",{parentName:"ul"},"The raw token response from the API, which sometimes can be helpful to get additional metadata")),(0,r.kt)("p",null,"You can find details about the structured metadata that Nango stores for each provider on their ",(0,r.kt)("a",{parentName:"p",href:"/providers"},"provider documentation page"),"."))}p.isMDXComponent=!0},6017:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/files/nango-auth-core-concepts-6d0216f89d0ccf06fcf50870f258aaf2.png"},8302:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/nango-auth-core-concepts-6d0216f89d0ccf06fcf50870f258aaf2.png"}}]);